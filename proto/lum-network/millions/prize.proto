syntax = "proto3";
package lum.network.millions;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/lum-network/chain/x/millions/types";

enum PrizeState {
  option (gogoproto.goproto_enum_prefix) = true;

  PRIZE_STATE_UNSPECIFIED = 0 [ (gogoproto.enumvalue_customname) = "Unspecified" ];
  PRIZE_STATE_PENDING = 1 [ (gogoproto.enumvalue_customname) = "Pending" ];
}

message Prize {
  uint64 pool_id = 1;
  uint64 draw_id = 2;
  uint64 prize_id = 3;

  PrizeState state = 4;

  string winner_address = 5 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  cosmos.base.v1beta1.Coin amount = 6 [ (gogoproto.nullable) = false ];

  int64 created_at_height = 7;
  int64 updated_at_height = 8;
  google.protobuf.Timestamp expires_at = 9 [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];
  google.protobuf.Timestamp created_at = 10 [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];
  google.protobuf.Timestamp updated_at = 11 [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];
}

message PrizeIDs {
  uint64 pool_id = 1;
  uint64 draw_id = 2;
  uint64 prize_id = 3;
}

message PrizeIDsCollection {
  repeated PrizeIDs prizes_ids = 1 [ (gogoproto.nullable) = false ];
}
