syntax = "proto3";
package lum.network.dfract;

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

import "lum-network/dfract/params.proto";
import "lum-network/dfract/deposit.proto";
import "lum-network/dfract/staking.proto";

option go_package = "github.com/lum-network/chain/x/dfract/types";

enum DepositsQueryType {
  PENDING_WITHDRAWAL = 0
      [ (gogoproto.enumvalue_customname) = "TypePendingWithdrawal" ];
  PENDING_MINT = 1 [ (gogoproto.enumvalue_customname) = "TypePendingMint" ];
  MINTED = 2 [ (gogoproto.enumvalue_customname) = "TypeMinted" ];
}

service Query {
  rpc ModuleAccountBalance(QueryModuleAccountBalanceRequest)
      returns (QueryModuleAccountBalanceResponse) {
    option (google.api.http).get = "/lum-network/dfract/module_account_balance";
  }

  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/lum-network/dfract/params";
  }

  rpc GetDepositsForAddress(QueryGetDepositsForAddressRequest)
      returns (QueryGetDepositsForAddressResponse) {
    option (google.api.http).get = "/lum-network/dfract/deposits/{address}";
  }

  rpc FetchDeposits(QueryFetchDepositsRequest)
      returns (QueryFetchDepositsResponse) {
    option (google.api.http).get = "/lum-network/dfract/deposits";
  }

  rpc GetStakedTokensForAddress(QueryGetStakedTokensForAddressRequest)
      returns (QueryGetStakedTokensResponse) {
    option (google.api.http).get = "/lum-network/dfract/staked/{address}";
  }
}

message QueryModuleAccountBalanceRequest {}

message QueryModuleAccountBalanceResponse {
  repeated cosmos.base.v1beta1.Coin moduleAccountBalance = 1 [
    (gogoproto.moretags) = "yaml:\"coins\"",
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message QueryParamsRequest {}

message QueryParamsResponse {
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryGetDepositsForAddressRequest { string address = 1; }

message QueryFetchDepositsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  DepositsQueryType type = 2;
}

message QueryGetDepositsForAddressResponse {
  Deposit deposits_pending_withdrawal = 1;
  Deposit deposits_pending_mint = 2;
  Deposit deposits_minted = 3;
}

message QueryFetchDepositsResponse {
  repeated Deposit deposits = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetStakedTokensForAddressRequest {string address = 1; }

message QueryGetStakedTokensResponse {
  Stake staked_token = 1 [ (gogoproto.nullable) = false ];
}