// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lum-network/millions/redelegate.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RedelegateState int32

const (
	RedelegateState_Unspecified            RedelegateState = 0
	RedelegateState_IcaRedelegate          RedelegateState = 1
	RedelegateState_IcaRedelegateUnbonding RedelegateState = 2
	RedelegateState_Success                RedelegateState = 3
	RedelegateState_Failure                RedelegateState = 4
)

var RedelegateState_name = map[int32]string{
	0: "REDELEGATE_STATE_UNSPECIFIED",
	1: "REDELEGATE_STATE_ICA_REDELEGATE",
	2: "REDELEGATE_STATE_ICA_REDELEGATE_UNBONDING",
	3: "REDELEGATE_STATE_SUCCESS",
	4: "REDELEGATE_STATE_FAILURE",
}

var RedelegateState_value = map[string]int32{
	"REDELEGATE_STATE_UNSPECIFIED":              0,
	"REDELEGATE_STATE_ICA_REDELEGATE":           1,
	"REDELEGATE_STATE_ICA_REDELEGATE_UNBONDING": 2,
	"REDELEGATE_STATE_SUCCESS":                  3,
	"REDELEGATE_STATE_FAILURE":                  4,
}

func (x RedelegateState) String() string {
	return proto.EnumName(RedelegateState_name, int32(x))
}

func (RedelegateState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3eec994ffd5d8adc, []int{0}
}

type Redelegate struct {
	IsGovPropRedelegated bool            `protobuf:"varint,1,opt,name=is_gov_prop_redelegated,json=isGovPropRedelegated,proto3" json:"is_gov_prop_redelegated,omitempty"`
	State                RedelegateState `protobuf:"varint,2,opt,name=state,proto3,enum=lum.network.millions.RedelegateState" json:"state,omitempty"`
	ErrorState           RedelegateState `protobuf:"varint,3,opt,name=error_state,json=errorState,proto3,enum=lum.network.millions.RedelegateState" json:"error_state,omitempty"`
	RedelegationEndsAt   *time.Time      `protobuf:"bytes,4,opt,name=redelegation_ends_at,json=redelegationEndsAt,proto3,stdtime" json:"redelegation_ends_at,omitempty"`
}

func (m *Redelegate) Reset()         { *m = Redelegate{} }
func (m *Redelegate) String() string { return proto.CompactTextString(m) }
func (*Redelegate) ProtoMessage()    {}
func (*Redelegate) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eec994ffd5d8adc, []int{0}
}
func (m *Redelegate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Redelegate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Redelegate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Redelegate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Redelegate.Merge(m, src)
}
func (m *Redelegate) XXX_Size() int {
	return m.Size()
}
func (m *Redelegate) XXX_DiscardUnknown() {
	xxx_messageInfo_Redelegate.DiscardUnknown(m)
}

var xxx_messageInfo_Redelegate proto.InternalMessageInfo

func (m *Redelegate) GetIsGovPropRedelegated() bool {
	if m != nil {
		return m.IsGovPropRedelegated
	}
	return false
}

func (m *Redelegate) GetState() RedelegateState {
	if m != nil {
		return m.State
	}
	return RedelegateState_Unspecified
}

func (m *Redelegate) GetErrorState() RedelegateState {
	if m != nil {
		return m.ErrorState
	}
	return RedelegateState_Unspecified
}

func (m *Redelegate) GetRedelegationEndsAt() *time.Time {
	if m != nil {
		return m.RedelegationEndsAt
	}
	return nil
}

type RedelegateVals struct {
	PoolId          uint64 `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	OperatorAddress string `protobuf:"bytes,2,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address,omitempty"`
}

func (m *RedelegateVals) Reset()         { *m = RedelegateVals{} }
func (m *RedelegateVals) String() string { return proto.CompactTextString(m) }
func (*RedelegateVals) ProtoMessage()    {}
func (*RedelegateVals) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eec994ffd5d8adc, []int{1}
}
func (m *RedelegateVals) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RedelegateVals) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RedelegateVals.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RedelegateVals) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedelegateVals.Merge(m, src)
}
func (m *RedelegateVals) XXX_Size() int {
	return m.Size()
}
func (m *RedelegateVals) XXX_DiscardUnknown() {
	xxx_messageInfo_RedelegateVals.DiscardUnknown(m)
}

var xxx_messageInfo_RedelegateVals proto.InternalMessageInfo

func (m *RedelegateVals) GetPoolId() uint64 {
	if m != nil {
		return m.PoolId
	}
	return 0
}

func (m *RedelegateVals) GetOperatorAddress() string {
	if m != nil {
		return m.OperatorAddress
	}
	return ""
}

type RedelegateValsCollection struct {
	RedelegateVals []RedelegateVals `protobuf:"bytes,1,rep,name=redelegate_vals,json=redelegateVals,proto3" json:"redelegate_vals"`
}

func (m *RedelegateValsCollection) Reset()         { *m = RedelegateValsCollection{} }
func (m *RedelegateValsCollection) String() string { return proto.CompactTextString(m) }
func (*RedelegateValsCollection) ProtoMessage()    {}
func (*RedelegateValsCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eec994ffd5d8adc, []int{2}
}
func (m *RedelegateValsCollection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RedelegateValsCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RedelegateValsCollection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RedelegateValsCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedelegateValsCollection.Merge(m, src)
}
func (m *RedelegateValsCollection) XXX_Size() int {
	return m.Size()
}
func (m *RedelegateValsCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_RedelegateValsCollection.DiscardUnknown(m)
}

var xxx_messageInfo_RedelegateValsCollection proto.InternalMessageInfo

func (m *RedelegateValsCollection) GetRedelegateVals() []RedelegateVals {
	if m != nil {
		return m.RedelegateVals
	}
	return nil
}

func init() {
	proto.RegisterEnum("lum.network.millions.RedelegateState", RedelegateState_name, RedelegateState_value)
	proto.RegisterType((*Redelegate)(nil), "lum.network.millions.Redelegate")
	proto.RegisterType((*RedelegateVals)(nil), "lum.network.millions.RedelegateVals")
	proto.RegisterType((*RedelegateValsCollection)(nil), "lum.network.millions.RedelegateValsCollection")
}

func init() {
	proto.RegisterFile("lum-network/millions/redelegate.proto", fileDescriptor_3eec994ffd5d8adc)
}

var fileDescriptor_3eec994ffd5d8adc = []byte{
	// 574 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xcf, 0x6a, 0xdb, 0x30,
	0x1c, 0xc7, 0xa3, 0x34, 0x6b, 0x3b, 0x85, 0x35, 0x99, 0x08, 0x6b, 0x30, 0xc3, 0x31, 0x65, 0x85,
	0x74, 0x50, 0x9b, 0x75, 0x6c, 0x97, 0x9d, 0x92, 0xd4, 0x09, 0x86, 0x92, 0x15, 0x3b, 0xe9, 0x61,
	0x17, 0xe1, 0xd8, 0xaa, 0x2b, 0xa6, 0x58, 0x46, 0x52, 0xba, 0xed, 0x0d, 0x46, 0x4e, 0x7d, 0x81,
	0xc0, 0xa0, 0x2f, 0xd3, 0x63, 0x8f, 0x3b, 0x75, 0xa3, 0x7d, 0x91, 0x11, 0x7b, 0xa9, 0x9b, 0xb5,
	0x50, 0x76, 0x11, 0xd2, 0x8f, 0xef, 0x1f, 0xf1, 0x41, 0x82, 0xdb, 0x6c, 0x32, 0xde, 0x8d, 0x89,
	0xfa, 0xc2, 0xc5, 0x67, 0x6b, 0x4c, 0x19, 0xa3, 0x3c, 0x96, 0x96, 0x20, 0x21, 0x61, 0x24, 0xf2,
	0x15, 0x31, 0x13, 0xc1, 0x15, 0x47, 0x35, 0x36, 0x19, 0x9b, 0x7f, 0x65, 0xe6, 0x42, 0xa6, 0xd5,
	0x22, 0x1e, 0xf1, 0x54, 0x60, 0xcd, 0x77, 0x99, 0x56, 0x6b, 0x44, 0x9c, 0x47, 0x8c, 0x58, 0xe9,
	0x69, 0x34, 0x39, 0xb6, 0x14, 0x1d, 0x13, 0xa9, 0xfc, 0x71, 0x92, 0x09, 0xb6, 0x7e, 0x14, 0x21,
	0x74, 0x6f, 0x1b, 0xd0, 0x3b, 0xb8, 0x49, 0x25, 0x8e, 0xf8, 0x29, 0x4e, 0x04, 0x4f, 0x70, 0xde,
	0x1d, 0xd6, 0x81, 0x01, 0x9a, 0xeb, 0x6e, 0x8d, 0xca, 0x1e, 0x3f, 0x3d, 0x14, 0x3c, 0xc9, 0x5d,
	0x21, 0xfa, 0x00, 0x9f, 0x48, 0xe5, 0x2b, 0x52, 0x2f, 0x1a, 0xa0, 0xb9, 0xb1, 0xb7, 0x6d, 0x3e,
	0x74, 0x45, 0x33, 0x77, 0x78, 0x73, 0xb1, 0x9b, 0x79, 0x50, 0x17, 0x96, 0x89, 0x10, 0x5c, 0xe0,
	0x2c, 0x62, 0xe5, 0x7f, 0x22, 0x60, 0xea, 0x4c, 0xf7, 0xe8, 0x08, 0xd6, 0x6e, 0xef, 0x4b, 0x79,
	0x8c, 0x49, 0x1c, 0x4a, 0xec, 0xab, 0x7a, 0xc9, 0x00, 0xcd, 0xf2, 0x9e, 0x66, 0x66, 0x28, 0xcc,
	0x05, 0x0a, 0x73, 0xb0, 0x40, 0xd1, 0x5e, 0xbf, 0xb8, 0x6a, 0x80, 0xb3, 0x5f, 0x0d, 0xe0, 0xa2,
	0xbb, 0x09, 0x76, 0x1c, 0xca, 0x96, 0xda, 0x1a, 0xc0, 0x8d, 0xbc, 0xf6, 0xc8, 0x67, 0x12, 0x6d,
	0xc2, 0xb5, 0x84, 0x73, 0x86, 0x69, 0x46, 0xa5, 0xe4, 0xae, 0xce, 0x8f, 0x4e, 0x88, 0x76, 0x60,
	0x95, 0x27, 0x44, 0xf8, 0x8a, 0x0b, 0xec, 0x87, 0xa1, 0x20, 0x52, 0xa6, 0x48, 0x9e, 0xba, 0x95,
	0xc5, 0xbc, 0x95, 0x8d, 0xb7, 0x38, 0xac, 0x2f, 0xa7, 0x76, 0x38, 0x63, 0x24, 0x98, 0xf7, 0x22,
	0x0f, 0x56, 0x72, 0xf2, 0xf8, 0xd4, 0x67, 0xb2, 0x0e, 0x8c, 0x95, 0x66, 0x79, 0xef, 0xd5, 0x63,
	0x54, 0xe6, 0x41, 0xed, 0xd2, 0xc5, 0x55, 0xa3, 0xe0, 0x6e, 0x88, 0xa5, 0xe9, 0xeb, 0xf3, 0x22,
	0xac, 0xfc, 0x83, 0x0f, 0xbd, 0x81, 0x2f, 0x5d, 0x7b, 0xdf, 0x3e, 0xb0, 0x7b, 0xad, 0x81, 0x8d,
	0xbd, 0xc1, 0x7c, 0x1d, 0xf6, 0xbd, 0x43, 0xbb, 0xe3, 0x74, 0x1d, 0x7b, 0xbf, 0x5a, 0xd0, 0x2a,
	0xd3, 0x99, 0x51, 0x1e, 0xc6, 0x32, 0x21, 0x01, 0x3d, 0xa6, 0x24, 0x44, 0xef, 0x61, 0xe3, 0x9e,
	0xc5, 0xe9, 0xb4, 0x70, 0x3e, 0xac, 0x02, 0xed, 0xf9, 0x74, 0x66, 0x3c, 0x73, 0x02, 0xff, 0xce,
	0xcb, 0x72, 0xe0, 0xce, 0x23, 0x3e, 0x3c, 0xec, 0xb7, 0x3f, 0xf6, 0xf7, 0x9d, 0x7e, 0xaf, 0x5a,
	0xd4, 0xb4, 0xe9, 0xcc, 0x78, 0xb1, 0x94, 0x30, 0x8c, 0x47, 0x3c, 0x0e, 0x69, 0x1c, 0xa1, 0x1d,
	0x58, 0xbf, 0x17, 0xe5, 0x0d, 0x3b, 0x1d, 0xdb, 0xf3, 0xaa, 0x2b, 0x5a, 0x79, 0x3a, 0x33, 0xd6,
	0xbc, 0x49, 0x10, 0x10, 0x29, 0x1f, 0x94, 0x76, 0x5b, 0xce, 0xc1, 0xd0, 0xb5, 0xab, 0xa5, 0x4c,
	0xda, 0xf5, 0x29, 0x9b, 0x08, 0xa2, 0x95, 0xbe, 0x9f, 0xeb, 0xa0, 0xdd, 0xbb, 0xb8, 0xd6, 0xc1,
	0xe5, 0xb5, 0x0e, 0x7e, 0x5f, 0xeb, 0xe0, 0xec, 0x46, 0x2f, 0x5c, 0xde, 0xe8, 0x85, 0x9f, 0x37,
	0x7a, 0xe1, 0xd3, 0x6e, 0x44, 0xd5, 0xc9, 0x64, 0x64, 0x06, 0x7c, 0x6c, 0xdd, 0xfd, 0xa8, 0xc1,
	0x89, 0x4f, 0x63, 0xeb, 0x6b, 0xfe, 0x61, 0xd5, 0xb7, 0x84, 0xc8, 0xd1, 0x6a, 0xfa, 0xce, 0xde,
	0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x47, 0x8c, 0x48, 0xd5, 0x03, 0x00, 0x00,
}

func (m *Redelegate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Redelegate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Redelegate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RedelegationEndsAt != nil {
		n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.RedelegationEndsAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.RedelegationEndsAt):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintRedelegate(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x22
	}
	if m.ErrorState != 0 {
		i = encodeVarintRedelegate(dAtA, i, uint64(m.ErrorState))
		i--
		dAtA[i] = 0x18
	}
	if m.State != 0 {
		i = encodeVarintRedelegate(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x10
	}
	if m.IsGovPropRedelegated {
		i--
		if m.IsGovPropRedelegated {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RedelegateVals) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RedelegateVals) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RedelegateVals) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OperatorAddress) > 0 {
		i -= len(m.OperatorAddress)
		copy(dAtA[i:], m.OperatorAddress)
		i = encodeVarintRedelegate(dAtA, i, uint64(len(m.OperatorAddress)))
		i--
		dAtA[i] = 0x12
	}
	if m.PoolId != 0 {
		i = encodeVarintRedelegate(dAtA, i, uint64(m.PoolId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RedelegateValsCollection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RedelegateValsCollection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RedelegateValsCollection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RedelegateVals) > 0 {
		for iNdEx := len(m.RedelegateVals) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RedelegateVals[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRedelegate(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintRedelegate(dAtA []byte, offset int, v uint64) int {
	offset -= sovRedelegate(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Redelegate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsGovPropRedelegated {
		n += 2
	}
	if m.State != 0 {
		n += 1 + sovRedelegate(uint64(m.State))
	}
	if m.ErrorState != 0 {
		n += 1 + sovRedelegate(uint64(m.ErrorState))
	}
	if m.RedelegationEndsAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.RedelegationEndsAt)
		n += 1 + l + sovRedelegate(uint64(l))
	}
	return n
}

func (m *RedelegateVals) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PoolId != 0 {
		n += 1 + sovRedelegate(uint64(m.PoolId))
	}
	l = len(m.OperatorAddress)
	if l > 0 {
		n += 1 + l + sovRedelegate(uint64(l))
	}
	return n
}

func (m *RedelegateValsCollection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.RedelegateVals) > 0 {
		for _, e := range m.RedelegateVals {
			l = e.Size()
			n += 1 + l + sovRedelegate(uint64(l))
		}
	}
	return n
}

func sovRedelegate(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRedelegate(x uint64) (n int) {
	return sovRedelegate(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Redelegate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRedelegate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Redelegate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Redelegate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsGovPropRedelegated", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsGovPropRedelegated = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= RedelegateState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorState", wireType)
			}
			m.ErrorState = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorState |= RedelegateState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedelegationEndsAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRedelegate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRedelegate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RedelegationEndsAt == nil {
				m.RedelegationEndsAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.RedelegationEndsAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRedelegate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRedelegate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRedelegate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RedelegateVals) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRedelegate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RedelegateVals: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RedelegateVals: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			m.PoolId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PoolId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRedelegate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRedelegate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OperatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRedelegate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRedelegate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRedelegate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RedelegateValsCollection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRedelegate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RedelegateValsCollection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RedelegateValsCollection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedelegateVals", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRedelegate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRedelegate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RedelegateVals = append(m.RedelegateVals, RedelegateVals{})
			if err := m.RedelegateVals[len(m.RedelegateVals)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRedelegate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRedelegate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRedelegate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRedelegate(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRedelegate
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRedelegate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRedelegate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRedelegate
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRedelegate
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRedelegate
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRedelegate        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRedelegate          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRedelegate = fmt.Errorf("proto: unexpected end of group")
)
