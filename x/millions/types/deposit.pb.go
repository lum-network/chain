// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lumnetwork/millions/deposit.proto

package types

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"

	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	_ "github.com/cosmos/gogoproto/types"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DepositState int32

const (
	DepositState_Unspecified DepositState = 0
	DepositState_IbcTransfer DepositState = 1
	DepositState_IcaDelegate DepositState = 2
	DepositState_Success     DepositState = 3
	DepositState_Failure     DepositState = 4
)

var DepositState_name = map[int32]string{
	0: "DEPOSIT_STATE_UNSPECIFIED",
	1: "DEPOSIT_STATE_IBC_TRANSFER",
	2: "DEPOSIT_STATE_ICA_DELEGATE",
	3: "DEPOSIT_STATE_SUCCESS",
	4: "DEPOSIT_STATE_FAILURE",
}

var DepositState_value = map[string]int32{
	"DEPOSIT_STATE_UNSPECIFIED":  0,
	"DEPOSIT_STATE_IBC_TRANSFER": 1,
	"DEPOSIT_STATE_ICA_DELEGATE": 2,
	"DEPOSIT_STATE_SUCCESS":      3,
	"DEPOSIT_STATE_FAILURE":      4,
}

func (x DepositState) String() string {
	return proto.EnumName(DepositState_name, int32(x))
}

func (DepositState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5771369eebf0b1c0, []int{0}
}

type Deposit struct {
	PoolId           uint64       `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	DepositId        uint64       `protobuf:"varint,2,opt,name=deposit_id,json=depositId,proto3" json:"deposit_id,omitempty"`
	State            DepositState `protobuf:"varint,3,opt,name=state,proto3,enum=lumnetwork.millions.DepositState" json:"state,omitempty"`
	ErrorState       DepositState `protobuf:"varint,4,opt,name=error_state,json=errorState,proto3,enum=lumnetwork.millions.DepositState" json:"error_state,omitempty"`
	DepositorAddress string       `protobuf:"bytes,5,opt,name=depositor_address,json=depositorAddress,proto3" json:"depositor_address,omitempty"`
	Amount           types.Coin   `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount"`
	WinnerAddress    string       `protobuf:"bytes,7,opt,name=winner_address,json=winnerAddress,proto3" json:"winner_address,omitempty"`
	IsSponsor        bool         `protobuf:"varint,8,opt,name=is_sponsor,json=isSponsor,proto3" json:"is_sponsor,omitempty"`
	CreatedAtHeight  int64        `protobuf:"varint,10,opt,name=created_at_height,json=createdAtHeight,proto3" json:"created_at_height,omitempty"`
	UpdatedAtHeight  int64        `protobuf:"varint,11,opt,name=updated_at_height,json=updatedAtHeight,proto3" json:"updated_at_height,omitempty"`
	CreatedAt        time.Time    `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at"`
	UpdatedAt        time.Time    `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at"`
}

func (m *Deposit) Reset()         { *m = Deposit{} }
func (m *Deposit) String() string { return proto.CompactTextString(m) }
func (*Deposit) ProtoMessage()    {}
func (*Deposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_5771369eebf0b1c0, []int{0}
}
func (m *Deposit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Deposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Deposit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Deposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deposit.Merge(m, src)
}
func (m *Deposit) XXX_Size() int {
	return m.Size()
}
func (m *Deposit) XXX_DiscardUnknown() {
	xxx_messageInfo_Deposit.DiscardUnknown(m)
}

var xxx_messageInfo_Deposit proto.InternalMessageInfo

func (m *Deposit) GetPoolId() uint64 {
	if m != nil {
		return m.PoolId
	}
	return 0
}

func (m *Deposit) GetDepositId() uint64 {
	if m != nil {
		return m.DepositId
	}
	return 0
}

func (m *Deposit) GetState() DepositState {
	if m != nil {
		return m.State
	}
	return DepositState_Unspecified
}

func (m *Deposit) GetErrorState() DepositState {
	if m != nil {
		return m.ErrorState
	}
	return DepositState_Unspecified
}

func (m *Deposit) GetDepositorAddress() string {
	if m != nil {
		return m.DepositorAddress
	}
	return ""
}

func (m *Deposit) GetAmount() types.Coin {
	if m != nil {
		return m.Amount
	}
	return types.Coin{}
}

func (m *Deposit) GetWinnerAddress() string {
	if m != nil {
		return m.WinnerAddress
	}
	return ""
}

func (m *Deposit) GetIsSponsor() bool {
	if m != nil {
		return m.IsSponsor
	}
	return false
}

func (m *Deposit) GetCreatedAtHeight() int64 {
	if m != nil {
		return m.CreatedAtHeight
	}
	return 0
}

func (m *Deposit) GetUpdatedAtHeight() int64 {
	if m != nil {
		return m.UpdatedAtHeight
	}
	return 0
}

func (m *Deposit) GetCreatedAt() time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return time.Time{}
}

func (m *Deposit) GetUpdatedAt() time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return time.Time{}
}

func init() {
	proto.RegisterEnum("lumnetwork.millions.DepositState", DepositState_name, DepositState_value)
	proto.RegisterType((*Deposit)(nil), "lumnetwork.millions.Deposit")
}

func init() { proto.RegisterFile("lumnetwork/millions/deposit.proto", fileDescriptor_5771369eebf0b1c0) }

var fileDescriptor_5771369eebf0b1c0 = []byte{
	// 660 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xcb, 0x4e, 0xdb, 0x4a,
	0x18, 0xc7, 0x33, 0x10, 0x72, 0x99, 0x70, 0x09, 0x3e, 0x1c, 0x1d, 0x13, 0x09, 0x63, 0xce, 0xa2,
	0x8a, 0x90, 0xb0, 0x05, 0x5d, 0xb0, 0xac, 0x72, 0x71, 0xa8, 0x2b, 0x44, 0x91, 0x9d, 0x6c, 0xba,
	0xb1, 0x1c, 0x7b, 0x70, 0x46, 0xb5, 0x3d, 0x96, 0x67, 0x5c, 0xda, 0x17, 0xa8, 0x2a, 0x56, 0xbc,
	0x00, 0xab, 0xbe, 0x42, 0x1f, 0x82, 0x25, 0xea, 0xaa, 0xab, 0xb6, 0x82, 0x77, 0xe8, 0xba, 0xb2,
	0x67, 0x92, 0x94, 0x16, 0xa9, 0xed, 0x6e, 0xe6, 0xfb, 0xff, 0xfe, 0xdf, 0x65, 0x66, 0x34, 0x70,
	0x27, 0xcc, 0xa2, 0x18, 0xb1, 0x73, 0x92, 0xbe, 0xd4, 0x23, 0x1c, 0x86, 0x98, 0xc4, 0x54, 0xf7,
	0x51, 0x42, 0x28, 0x66, 0x5a, 0x92, 0x12, 0x46, 0xa4, 0x7f, 0xe6, 0x88, 0x36, 0x45, 0x5a, 0x1b,
	0x01, 0x09, 0x48, 0xa1, 0xeb, 0xf9, 0x8a, 0xa3, 0xad, 0xed, 0x80, 0x90, 0x20, 0x44, 0x7a, 0xb1,
	0x1b, 0x67, 0x67, 0x3a, 0xc3, 0x11, 0xa2, 0xcc, 0x8d, 0x12, 0x01, 0x28, 0x1e, 0xa1, 0x11, 0xa1,
	0xfa, 0xd8, 0xa5, 0x48, 0x7f, 0xb5, 0x3f, 0x46, 0xcc, 0xdd, 0xd7, 0x3d, 0x82, 0x63, 0xa1, 0x6f,
	0x72, 0xdd, 0xe1, 0x99, 0xf9, 0x86, 0x4b, 0xff, 0xbf, 0x5d, 0x82, 0xd5, 0x3e, 0x6f, 0x4c, 0xfa,
	0x0f, 0x56, 0x13, 0x42, 0x42, 0x07, 0xfb, 0x32, 0x50, 0x41, 0xbb, 0x6c, 0x55, 0xf2, 0xad, 0xe9,
	0x4b, 0x5b, 0x10, 0x8a, 0xe6, 0x73, 0x6d, 0xa1, 0xd0, 0xea, 0x22, 0x62, 0xfa, 0xd2, 0x21, 0x5c,
	0xa2, 0xcc, 0x65, 0x48, 0x5e, 0x54, 0x41, 0x7b, 0xf5, 0x60, 0x47, 0x7b, 0x60, 0x34, 0x4d, 0x14,
	0xb1, 0x73, 0xd0, 0xe2, 0xbc, 0xd4, 0x85, 0x0d, 0x94, 0xa6, 0x24, 0x75, 0xb8, 0xbd, 0xfc, 0xa7,
	0x76, 0x58, 0xb8, 0x8a, 0xb5, 0x64, 0xc0, 0x75, 0xd1, 0x09, 0x49, 0x1d, 0xd7, 0xf7, 0x53, 0x44,
	0xa9, 0xbc, 0xa4, 0x82, 0x76, 0xbd, 0x2b, 0x7f, 0xfc, 0xb0, 0xb7, 0x21, 0xa6, 0xed, 0x70, 0xc5,
	0x66, 0x29, 0x8e, 0x03, 0xab, 0x39, 0xb3, 0x88, 0xb8, 0x74, 0x08, 0x2b, 0x6e, 0x44, 0xb2, 0x98,
	0xc9, 0x15, 0x15, 0xb4, 0x1b, 0x07, 0x9b, 0x9a, 0x30, 0xe6, 0x67, 0xaa, 0x89, 0x33, 0xd5, 0x7a,
	0x04, 0xc7, 0xdd, 0xf2, 0xf5, 0xe7, 0xed, 0x92, 0x25, 0x70, 0xe9, 0x09, 0x5c, 0x3d, 0xc7, 0x71,
	0x8c, 0xe6, 0xc5, 0xab, 0xbf, 0x29, 0xbe, 0xc2, 0xf9, 0x69, 0xe5, 0x2d, 0x08, 0x31, 0x75, 0x68,
	0x42, 0x62, 0x4a, 0x52, 0xb9, 0xa6, 0x82, 0x76, 0xcd, 0xaa, 0x63, 0x6a, 0xf3, 0x80, 0xb4, 0x0b,
	0xd7, 0xbd, 0x14, 0xb9, 0x0c, 0xf9, 0x8e, 0xcb, 0x9c, 0x09, 0xc2, 0xc1, 0x84, 0xc9, 0x50, 0x05,
	0xed, 0x45, 0x6b, 0x4d, 0x08, 0x1d, 0xf6, 0xb4, 0x08, 0xe7, 0x6c, 0x96, 0xf8, 0x3f, 0xb1, 0x0d,
	0xce, 0x0a, 0x61, 0xc6, 0xf6, 0x20, 0x9c, 0xe7, 0x95, 0x97, 0x8b, 0xa1, 0x5b, 0x1a, 0x7f, 0x69,
	0xda, 0xf4, 0xa5, 0x69, 0xc3, 0xe9, 0x4b, 0xeb, 0xd6, 0xf2, 0xa9, 0x2f, 0xbf, 0x6c, 0x03, 0xab,
	0x3e, 0x2b, 0x9b, 0x27, 0x99, 0x17, 0x94, 0x57, 0xfe, 0x26, 0xc9, 0xac, 0x9f, 0x67, 0xe5, 0x5a,
	0xbd, 0x09, 0x77, 0xbf, 0x01, 0xb8, 0xfc, 0xe3, 0x25, 0x4b, 0x1a, 0xdc, 0xec, 0x1b, 0xa7, 0xcf,
	0x6d, 0x73, 0xe8, 0xd8, 0xc3, 0xce, 0xd0, 0x70, 0x46, 0x27, 0xf6, 0xa9, 0xd1, 0x33, 0x07, 0xa6,
	0xd1, 0x6f, 0x96, 0x5a, 0x6b, 0x17, 0x57, 0x6a, 0x63, 0x14, 0xd3, 0x04, 0x79, 0xf8, 0x0c, 0x23,
	0x5f, 0xd2, 0x61, 0xeb, 0x3e, 0x6f, 0x76, 0x7b, 0xce, 0xd0, 0xea, 0x9c, 0xd8, 0x03, 0xc3, 0x6a,
	0x02, 0x6e, 0x30, 0xc7, 0xde, 0x30, 0x75, 0x63, 0x7a, 0x86, 0xd2, 0x07, 0x0c, 0xbd, 0x8e, 0xd3,
	0x37, 0x8e, 0x8d, 0xa3, 0xce, 0xd0, 0x68, 0x2e, 0x08, 0x83, 0xe7, 0xf6, 0x51, 0x88, 0x82, 0xbc,
	0xa3, 0x47, 0xf0, 0xdf, 0xfb, 0x06, 0x7b, 0xd4, 0xeb, 0x19, 0xb6, 0xdd, 0x5c, 0x6c, 0x35, 0x2e,
	0xae, 0xd4, 0xaa, 0x9d, 0x79, 0x5e, 0x7e, 0xa3, 0xbf, 0x70, 0x83, 0x8e, 0x79, 0x3c, 0xb2, 0x8c,
	0x66, 0x99, 0x73, 0x03, 0x17, 0x87, 0x59, 0x8a, 0x5a, 0xe5, 0x77, 0xef, 0x15, 0xd0, 0x3d, 0xba,
	0xbe, 0x55, 0xc0, 0xcd, 0xad, 0x02, 0xbe, 0xde, 0x2a, 0xe0, 0xf2, 0x4e, 0x29, 0xdd, 0xdc, 0x29,
	0xa5, 0x4f, 0x77, 0x4a, 0xe9, 0xc5, 0x5e, 0x80, 0xd9, 0x24, 0x1b, 0x6b, 0x1e, 0x89, 0xf4, 0x30,
	0x8b, 0xf6, 0xa6, 0x3f, 0x8a, 0x37, 0x71, 0x71, 0xac, 0xbf, 0x9e, 0xff, 0x2c, 0xec, 0x4d, 0x82,
	0xe8, 0xb8, 0x52, 0x1c, 0xf8, 0xe3, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x3e, 0xab, 0xc2,
	0x7d, 0x04, 0x00, 0x00,
}

func (m *Deposit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Deposit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Deposit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.UpdatedAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.UpdatedAt):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintDeposit(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x6a
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.CreatedAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CreatedAt):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintDeposit(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x62
	if m.UpdatedAtHeight != 0 {
		i = encodeVarintDeposit(dAtA, i, uint64(m.UpdatedAtHeight))
		i--
		dAtA[i] = 0x58
	}
	if m.CreatedAtHeight != 0 {
		i = encodeVarintDeposit(dAtA, i, uint64(m.CreatedAtHeight))
		i--
		dAtA[i] = 0x50
	}
	if m.IsSponsor {
		i--
		if m.IsSponsor {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.WinnerAddress) > 0 {
		i -= len(m.WinnerAddress)
		copy(dAtA[i:], m.WinnerAddress)
		i = encodeVarintDeposit(dAtA, i, uint64(len(m.WinnerAddress)))
		i--
		dAtA[i] = 0x3a
	}
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintDeposit(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	if len(m.DepositorAddress) > 0 {
		i -= len(m.DepositorAddress)
		copy(dAtA[i:], m.DepositorAddress)
		i = encodeVarintDeposit(dAtA, i, uint64(len(m.DepositorAddress)))
		i--
		dAtA[i] = 0x2a
	}
	if m.ErrorState != 0 {
		i = encodeVarintDeposit(dAtA, i, uint64(m.ErrorState))
		i--
		dAtA[i] = 0x20
	}
	if m.State != 0 {
		i = encodeVarintDeposit(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x18
	}
	if m.DepositId != 0 {
		i = encodeVarintDeposit(dAtA, i, uint64(m.DepositId))
		i--
		dAtA[i] = 0x10
	}
	if m.PoolId != 0 {
		i = encodeVarintDeposit(dAtA, i, uint64(m.PoolId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintDeposit(dAtA []byte, offset int, v uint64) int {
	offset -= sovDeposit(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Deposit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PoolId != 0 {
		n += 1 + sovDeposit(uint64(m.PoolId))
	}
	if m.DepositId != 0 {
		n += 1 + sovDeposit(uint64(m.DepositId))
	}
	if m.State != 0 {
		n += 1 + sovDeposit(uint64(m.State))
	}
	if m.ErrorState != 0 {
		n += 1 + sovDeposit(uint64(m.ErrorState))
	}
	l = len(m.DepositorAddress)
	if l > 0 {
		n += 1 + l + sovDeposit(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovDeposit(uint64(l))
	l = len(m.WinnerAddress)
	if l > 0 {
		n += 1 + l + sovDeposit(uint64(l))
	}
	if m.IsSponsor {
		n += 2
	}
	if m.CreatedAtHeight != 0 {
		n += 1 + sovDeposit(uint64(m.CreatedAtHeight))
	}
	if m.UpdatedAtHeight != 0 {
		n += 1 + sovDeposit(uint64(m.UpdatedAtHeight))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovDeposit(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.UpdatedAt)
	n += 1 + l + sovDeposit(uint64(l))
	return n
}

func sovDeposit(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDeposit(x uint64) (n int) {
	return sovDeposit(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Deposit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeposit
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Deposit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Deposit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			m.PoolId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeposit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PoolId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositId", wireType)
			}
			m.DepositId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeposit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DepositId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeposit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= DepositState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorState", wireType)
			}
			m.ErrorState = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeposit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorState |= DepositState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeposit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeposit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDeposit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DepositorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeposit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeposit
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeposit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WinnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeposit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeposit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDeposit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WinnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsSponsor", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeposit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsSponsor = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAtHeight", wireType)
			}
			m.CreatedAtHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeposit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAtHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAtHeight", wireType)
			}
			m.UpdatedAtHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeposit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdatedAtHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeposit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeposit
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeposit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeposit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeposit
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeposit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeposit(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeposit
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDeposit(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDeposit
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDeposit
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDeposit
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDeposit
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDeposit
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDeposit
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDeposit        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDeposit          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDeposit = fmt.Errorf("proto: unexpected end of group")
)
